# =============================================================================
# Archivo de Variables de Entorno - Dashboard Yega
# Copia este archivo como .env y configura según tu entorno
# =============================================================================

# ═══════════════════════════════════════════════════════════════════════════════
# CONFIGURACIÓN DE APLICACIÓN
# ═══════════════════════════════════════════════════════════════════════════════

# Nombre de la aplicación
APP_NAME="Yega Dashboard"

# Entorno de ejecución: local, development, staging, production
APP_ENV=local

# Modo debug: true para desarrollo, false para producción
APP_DEBUG=true

# URL base de la aplicación
APP_URL=http://localhost:8000

# Zona horaria de la aplicación
APP_TIMEZONE=America/Mexico_City

# Clave de encriptación de la aplicación (generar con: openssl rand -base64 32)
APP_KEY=

# ═══════════════════════════════════════════════════════════════════════════════
# CONFIGURACIÓN DE BASE DE DATOS
# ═══════════════════════════════════════════════════════════════════════════════

# Tipo de base de datos
DB_CONNECTION=mysql

# Host de la base de datos
DB_HOST=localhost

# Puerto de la base de datos
DB_PORT=3306

# Nombre de la base de datos
DB_DATABASE=yega_dashboard

# Usuario de la base de datos
DB_USERNAME=yega_user

# Contraseña de la base de datos
DB_PASSWORD=tu_password_seguro_aqui

# URL completa de conexión para Prisma
DATABASE_URL="mysql://yega_user:tu_password_seguro_aqui@localhost:3306/yega_dashboard"

# ═══════════════════════════════════════════════════════════════════════════════
# CONFIGURACIÓN DE GITHUB API
# ═══════════════════════════════════════════════════════════════════════════════

# Token de acceso personal de GitHub (requerido)
# Generar en: https://github.com/settings/tokens
# Permisos necesarios: repo, user:read, user:email, read:org
GITHUB_TOKEN=

# Tu nombre de usuario de GitHub
GITHUB_USERNAME=

# URL base de la API de GitHub
GITHUB_API_URL=https://api.github.com

# Secret para webhooks de GitHub (opcional)
GITHUB_WEBHOOK_SECRET=

# ═══════════════════════════════════════════════════════════════════════════════
# CONFIGURACIÓN DE CACHE
# ═══════════════════════════════════════════════════════════════════════════════

# Driver de cache: file, redis, memcached
CACHE_DRIVER=file

# Configuración Redis (si se usa)
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=
REDIS_DB=0

# ═══════════════════════════════════════════════════════════════════════════════
# CONFIGURACIÓN DE SESIONES
# ═══════════════════════════════════════════════════════════════════════════════

# Driver de sesiones: file, database, redis
SESSION_DRIVER=file

# Tiempo de vida de sesiones en minutos
SESSION_LIFETIME=120

# Encriptar sesiones
SESSION_ENCRYPT=true

# Dominio de cookies de sesión
SESSION_DOMAIN=localhost

# ═══════════════════════════════════════════════════════════════════════════════
# CONFIGURACIÓN DE EMAIL
# ═══════════════════════════════════════════════════════════════════════════════

# Driver de mail: smtp, sendmail, mailgun, ses, log
MAIL_MAILER=smtp

# Configuración SMTP
MAIL_HOST=localhost
MAIL_PORT=587
MAIL_USERNAME=
MAIL_PASSWORD=
MAIL_ENCRYPTION=tls

# Dirección de envío por defecto
MAIL_FROM_ADDRESS=noreply@yega-dashboard.local
MAIL_FROM_NAME="Yega Dashboard"

# ═══════════════════════════════════════════════════════════════════════════════
# CONFIGURACIÓN DE LOGGING
# ═══════════════════════════════════════════════════════════════════════════════

# Canal de logs: single, daily, syslog, errorlog
LOG_CHANNEL=daily

# Nivel de logging: debug, info, notice, warning, error, critical, alert, emergency
LOG_LEVEL=info

# Días de retención de logs (para daily)
LOG_DAYS=14

# Directorio de logs
LOG_PATH=logs/

# ═══════════════════════════════════════════════════════════════════════════════
# CONFIGURACIÓN DE SEGURIDAD
# ═══════════════════════════════════════════════════════════════════════════════

# Clave JWT para autenticación (generar con: openssl rand -base64 64)
JWT_SECRET=

# Tiempo de expiración de tokens JWT en minutos
JWT_TTL=60

# Algoritmo de encriptación JWT
JWT_ALGO=HS256

# Clave adicional de encriptación
ENCRYPTION_KEY=

# ═══════════════════════════════════════════════════════════════════════════════
# CONFIGURACIÓN DE API RATE LIMITING
# ═══════════════════════════════════════════════════════════════════════════════

# Límite de requests por minuto para API
API_RATE_LIMIT=60

# Ventana de tiempo para rate limiting en segundos
API_RATE_LIMIT_WINDOW=60

# Límite específico para GitHub API
GITHUB_API_RATE_LIMIT=5000

# ═══════════════════════════════════════════════════════════════════════════════
# CONFIGURACIÓN DE SINCRONIZACIÓN GITHUB
# ═══════════════════════════════════════════════════════════════════════════════

# Intervalo de sincronización automática en segundos (0 = deshabilitado)
GITHUB_SYNC_INTERVAL=300

# Tamaño de lote para sincronización
GITHUB_BATCH_SIZE=50

# Timeout para requests HTTP en segundos
GITHUB_TIMEOUT=30

# Reintentos automáticos en caso de error
GITHUB_RETRY_ATTEMPTS=3

# Delay entre reintentos en segundos
GITHUB_RETRY_DELAY=5

# ═══════════════════════════════════════════════════════════════════════════════
# CONFIGURACIÓN DE COLAS Y TRABAJOS
# ═══════════════════════════════════════════════════════════════════════════════

# Driver de colas: sync, database, redis, beanstalkd
QUEUE_CONNECTION=sync

# Cola por defecto
QUEUE_DEFAULT=default

# ═══════════════════════════════════════════════════════════════════════════════
# CONFIGURACIÓN DE DESARROLLO
# ═══════════════════════════════════════════════════════════════════════════════

# Mostrar errores de SQL en desarrollo
DB_DEBUG=false

# Habilitar query logging
DB_LOG_QUERIES=false

# Modo de desarrollo de Webpack
WEBPACK_DEV_MODE=true

# Hot reload para desarrollo
HOT_RELOAD=true

# ═══════════════════════════════════════════════════════════════════════════════
# CONFIGURACIÓN DE MONITOREO
# ═══════════════════════════════════════════════════════════════════════════════

# Habilitar métricas de rendimiento
ENABLE_METRICS=false

# URL para envío de métricas
METRICS_URL=

# API key para servicio de métricas
METRICS_API_KEY=

# ═══════════════════════════════════════════════════════════════════════════════
# CONFIGURACIÓN DE BACKUP
# ═══════════════════════════════════════════════════════════════════════════════

# Habilitar backups automáticos
BACKUP_ENABLED=false

# Directorio de backups
BACKUP_PATH=backups/

# Retención de backups en días
BACKUP_RETENTION_DAYS=30

# ═══════════════════════════════════════════════════════════════════════════════
# CONFIGURACIÓN DE TERCEROS
# ═══════════════════════════════════════════════════════════════════════════════

# Google Analytics (opcional)
GOOGLE_ANALYTICS_ID=

# Sentry para error tracking (opcional)
SENTRY_DSN=

# New Relic (opcional)
NEW_RELIC_LICENSE_KEY=

# ═══════════════════════════════════════════════════════════════════════════════
# CONFIGURACIÓN DE TESTING
# ═══════════════════════════════════════════════════════════════════════════════

# Base de datos para testing
TEST_DB_DATABASE=yega_dashboard_test

# Faker locale para testing
FAKER_LOCALE=es_ES

# ═══════════════════════════════════════════════════════════════════════════════
# NOTAS IMPORTANTES
# ═══════════════════════════════════════════════════════════════════════════════

# 1. Nunca subas este archivo a control de versiones con datos reales
# 2. Genera claves seguras para APP_KEY, JWT_SECRET, ENCRYPTION_KEY
# 3. Usa contraseñas fuertes para la base de datos
# 4. Configura GITHUB_TOKEN para funcionalidad completa
# 5. En producción, establece APP_DEBUG=false y APP_ENV=production
# 6. Considera usar Redis para cache y sesiones en producción
# 7. Configura HTTPS en producción (APP_URL=https://...)